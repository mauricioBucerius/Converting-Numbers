import datetime


def get_work_hour(start):
    time_now = datetime.datetime.now().strftime("%H:%M")
    return get_time_dif(time_now, [start, "0:45"])


def formate_clock(value):
    """
    formates the representation of the mins/hours. In case you get a single 
    digit time, it adds a '0' in front of them.

    Parameters
    ----------
    value : int
        Integer in the range between 0 and 60.

    Returns
    -------
    string
        String which represents the value of the time between 00 and 60, with
        better fromation.

    """
    if value < 10:
        return f'0{value}'
    else:
        return str(value)
        
    
def get_calc_dif(hours_1, mins_1, hours_2, mins_2):
    # difference between both hours
    if hours_1 > hours_2:
        diff_hours = hours_1 - hours_2
        
        # difference between both minutes
        if mins_1 > mins_2:
            diff_mins = mins_1 - mins_2
        else:
            # if mins_1 smaller, then there is no full hour between both
            # times and you have to calc the difference between mins_1 to the 
            # full 60 minutes and the add the mins_1 for the real difference
            mins_to_60 = 60 - mins_2
            diff_mins = mins_1 + mins_to_60
            
            if diff_mins == 60:
                # If the difference is 60 - zero it and don't subtract the hours
                diff_mins = 0 
            else:    
                diff_hours -= 1     # there is no full hour difference -> sub 1
    else:
        diff_hours = hours_2 - hours_1
        
                # difference between both minutes
        if mins_2 > mins_1:
            diff_mins = mins_2 - mins_1
        else:
            # if mins_1 smaller, then there is no full hour between both
            # times and you have to calc the difference between mins_1 to the 
            # full 60 minutes and the add the mins_1 for the real difference
            mins_to_60 = 60 - mins_2
            diff_mins = mins_1 + mins_to_60
            
            if diff_mins == 60:
                # If the difference is 60 - zero it and don't subtract the hours
                diff_mins = 0 
            else:    
                diff_hours -= 1     # there is no full hour difference -> sub 1
    return diff_hours, diff_mins


def calc_sum(time_1, time_2):
    hours_1, mins_1 = split_time(time_1)
    hours_2, mins_2 = split_time(time_2)
    
    sum_mins = mins_1 + mins_2
    sum_hours = hours_1 + hours_2
    if sum_mins > 59:
        sum_mins -= 60
        sum_hours += 1
    return f'{formate_clock(sum_hours)}:{formate_clock(sum_mins)}'
        

def get_time_sum(time_list):
    """
    calculates the sum of a list of time strings

    Parameters
    ----------
    time_list : list of strings with format "hh:mm"
        list with strings with different times which should be summed up

    Returns
    -------
    time_sum : list of strings with format "hh:mm"
        sum of all times.

    """
    for idx in range(1, len(time_list)):
        if idx == 1:
            time_sum = calc_sum(time_list[0], time_list[idx])
        else:
            time_sum = calc_sum(time_sum, time_list[idx])
    return time_sum

        
def split_time(time):
    """
    splits the string time into two integer and returns

    Parameters
    ----------
    time : string
        time

    Returns
    -------
    hours : int
        returns hours
    mins : int
        returns mins

    """
    time_str = time.split(':')
    hours = int(time_str[0])
    mins = int(time_str[1])
    return hours, mins


def get_time_dif(time_1, time_2, rv='all'):
    """
        needs to times to be evaluated and calculates the difference between 
        both times and returns the difference in minutes and hours in the
        format hh:mm

    Parameters
    ----------
    time_1 : String - hh:mm
        time 1 which is to be compared.
    time_2 : String or list, with following representation- hh:mm
        time 2 which is to be compared.

    Returns 
    -------
    time difference as string in representation "hh:mm"

    """
    
    if isinstance(time_2, list):    
        # print(time_1)
        hours_2, mins_2 = split_time(get_time_sum(time_2))
    else:
        hours_2, mins_2 = split_time(time_2)
        
    time_1_str = time_1.split(':')
    hours_1 = int(time_1_str[0])
    mins_1 = int(time_1_str[1])
    
    diff_hours, diff_mins = get_calc_dif(hours_1, mins_1, hours_2, mins_2)
        
    if rv=='all':
        return f"{formate_clock(diff_hours)}:{formate_clock(diff_mins)}"
    elif rv=='mins':
        return str(60*diff_hours+diff_mins)
